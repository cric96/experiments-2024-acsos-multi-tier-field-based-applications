incarnation: scafi

variables:
  seed: &seed
    min: 0
    max: 4
    step: 1
    default: 0
  applicativeRange: &applicativeRange
    formula: 3000.0
  edgeRange: &edgeRange
    formula: 5000.0
  moveFrequency: &moveFrequency
    formula: 1.0 / 2
    language: scala
  nodeCount: &nodeCount
    type: ArbitraryVariable
    parameters: [ 50, [ 50, 100, 200 ] ]
  surrogateFrequency:
    formula: [0, 1]
  localTarget: &localTarget
    language: scala
    formula: |
      s"""
      import it.unibo.alchemist.model.{Target, LocalNode, SurrogateNode}
      LocalNode
      """

_constants:
  retentionTime: &retentionTime 25.0

seeds:
  scenario: *seed
  simulation: *seed

network-model:
  type: ConnectWithinDistance
  parameters: [*applicativeRange]

_reproduceGpsTrace: &ReproduceGPSTrace
  type: GPSTraceWalker
  parameters: ["vcmuser.gpx", false, AlignToTime, [1365922800, false, false]]

_programs:
  - program: &monolithProgram
    - time-distribution: 1
      type: Event
      actions:
        - type: RunScafiProgram
          parameters: [ it.unibo.modularization.MonolithProgram, *retentionTime ]
    - program: send

  - program: &moveWithTraces
    - time-distribution: *moveFrequency
      type: Event
      actions:
        - *ReproduceGPSTrace

environment:
  type: OSMEnvironment
  parameters: ["vcm.pbf", false]

deployments:
  - type: FromGPSTrace
    parameters: [ *nodeCount, "vcmuser.gpx", false, AlignToTime, [ 1365922800, false, false ] ]
    programs:
      - *monolithProgram
      - *moveWithTraces
    contents:
      - molecule: Target
        concentration: *localTarget
      - molecule: WearableDevice
        concentration: true

export:
  - type: CSVExporter
    parameters:
      fileNameRoot: "monolithic"
      interval: 1.0
      exportPath: "data"
    data:
      - time
      - molecule: isRegionLeader
        aggregators: [sum]
        value-filter: onlyfinite

terminate:
  type: AfterTime
  parameters: 1800
